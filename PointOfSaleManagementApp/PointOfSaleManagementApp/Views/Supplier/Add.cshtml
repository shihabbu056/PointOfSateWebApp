@model PointOfSaleManagementApp.ViewModels.SupplierViewModel
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-10" style="background-color: #22BAA0;">
    <div class="row">
        <h1 class="panel-title" style="margin: 5px; color: black; font-size: 25px;">
            <b>Supplier Add</b>
        </h1>
        <div class="title">
            <ol class="breadcrumb" style="background-color: #22BAA0; margin-bottom: 10px; font-size: 15px;">
                <li><a href="#">Home</a></li>
                <li class="active">Action"</li>
            </ol>
        </div>
        <hr style="margin-top: 4px; margin-bottom: 5px;" />
    </div>
    <div class="row" style="background-color: white">
        @using (Html.BeginForm("Add", "Customer", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal" style="margin-top: 25px; margin-right: 8px;">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-7">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group" style="padding-right: 10%;">
                        @Html.Label("Supplier Photo")
                        <div id="imgPreview" class="thumbnail" style="display: block">
                            <img class="img-responsive" id="targetImg" style="height: 200px; width: 200px" />
                            <div class="caption">
                                <a href="#" id="clearPreview" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                <span id="description"></span>
                            </div>
                            @*<a href="#" class="btn btn-default" onclick="Uploadimage()">Upload</a>*@
                        </div>
                    </div>
                    <div class="btn btn-primary ">
                        <input type="file" name="Image" id="fileUpload" onclick="FileUpload()" accept=".png,.jpg,.jpeg,.gif,.tif" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10" style="margin-left: 152px;">
                        <input type="submit" value="Create" class="btn btn-success" style="width: 200px; font-size: 15px;" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>


    <script src="~/scripts/plugins/jquery-validation/jquery.validate.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.js"></script>
    <script>
        //Image show function method use code

        //function ShowImagePreview(imageUploader, previewImage) {
        //    if (imageUploader.files && imageUploader.files[0]) {
        //        var reader = new FileReader();
        //        reader.onload = function (e) {
        //            $(previewImage).attr('src', e.target.result);
        //        }
        //        reader.readAsDataURL(imageUploader.files[0]);
        //    }
        //}
        //$(function() {
        //    //ShowImagePreview();
        //});

        //Image Upload Second Method and Project image save and database bit image save
        jQuery(function ($) {
            $(document).ready(function () {
                var readImage = function (file) {

                    var reader = new FileReader;
                    var image = new Image;

                    reader.readAsDataURL(file);
                    reader.onload = function (_file) {

                        image.src = _file.target.result;
                        image.onload = function () {

                            var height = this.height;
                            var width = this.width;
                            var type = file.type;
                            var size = ~~(file.size / 1024) + "KB";

                            $("#targetImg").attr('src', _file.target.result);
                            $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                            $("#imgPreview").show();

                        };
                    };
                };
                $("#fileUpload").change(function () {
                    debugger;
                    var file = this.files;

                    if (file && file[0]) {
                        readImage(file[0]);
                    }

                });
                $("#clearPreview").click(function () {
                    $("#fileUpload").val('');
                    $("#description").text('');
                    $("#imgPreview").hide();

                });
            });

        });

    </script>


